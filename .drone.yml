---
kind: pipeline
type: docker
name: run-tests

trigger:
  event:
    - push

platform:
  os: linux
  arch: amd64

steps:

  - name: untiy-activate-license
    image: unityci/editor:2020.3.21f1-webgl-0
    commands:
      - mkdir -p $(dirname "$UNITY_LICENSE_PATH") 
      - echo "$${UNITY_LICENSE}" > "$UNITY_LICENSE_PATH"
    volumes:
      - name: profile
        path: /root
    environment:
      UNITY_LICENSE_PATH: "/root/.local/share/unity3d/Unity/Unity_lic.ulf"
      UNITY_LICENSE:
        from_secret: unity_license

  - name: cloudsmith-registry-auth
    image: bash
    commands:
      - "[ -z \"$CLOUDSMITH_TOKEN\" ] && echo \"cloudsmith_token not set\" && exit 2 || true"
      - echo '[npmAuth."https://npm.cloudsmith.io/labster/unity"]' > ~/.upmconfig.toml
      - echo "token = \"$CLOUDSMITH_TOKEN\"" >> ~/.upmconfig.toml
      - echo "alwaysAuth = true" >> ~/.upmconfig.toml
    environment:
      CLOUDSMITH_TOKEN:
        from_secret: cloudsmith_token
    volumes:
      - name: profile
        path: /root

  - name: download-coverage-history
    image: say5/docker-aws-cli:0.0.3
    failure: ignore
    commands:
      - chmod -R 755 ./ci-scripts
      - ./ci-scripts/aws-cp.sh s3://S3_BUCKET/$DRONE_REPO_NAME/coverage-history /coverage-history --recursive
      - ls /coverage-history
    environment:
      ARTIFACTS_SERVER:
        from_secret: artifacts_server
      ECR_ACCESS_KEY:
        from_secret: ecr_access_key
      ECR_SECRET_KEY:
        from_secret: ecr_secret_key
      GITHUB_TOKEN:
        from_secret: github_token
      S3_BUCKET:
        from_secret: s3_bucket
    volumes:
      - name: coverage-history
        path: /coverage-history

  - name: run-tests
    image: unityci/editor:2020.3.21f1-webgl-0
    commands:
      - ls .
      - >-
        unity-editor
        -projectPath ./Asteroids
        -logFile /dev/stdout
        -testPlatform playmode -runTests -testResults /build-output/test-results.xml
        -debugCodeOptimization 
        -enableCodeCoverage
        -coverageResultsPath /build-output/coverage-report
        -coverageHistoryPath /coverage-history
        -coverageOptions "generateAdditionalMetrics;generateHtmlReport;generateHtmlReportHistory;generateBadgeReport;
        assemblyFilters:+<project>,-<packages>;
        pathFilters:-**/Tests/**,-**/BuiltInPackages/**;
        verbosity:verbose"
        
      - echo "Finished run-tests"
      - ls -Rhl /build-output
    volumes:
      - name: build-output
        path: /build-output
      - name: coverage-history
        path: /coverage-history
      - name: profile
        path: /root
    depends_on:
      - cloudsmith-registry-auth
      - untiy-activate-license
      - download-coverage-history

  - name: upload-test-results
    image: say5/docker-aws-cli:0.0.3
    commands:
      - ls /build-output
      - chmod -R 755 ./ci-scripts
      - LOGS_URL=$$(SKIP_GITHUB_STATUS=1 ./ci-scripts/upload.sh /build-output | grep "Artifacts url" | sed "s%Artifacts url\:\s*%%")
      - echo $LOGS_URL
    environment:
      ARTIFACTS_SERVER:
        from_secret: artifacts_server
      ECR_ACCESS_KEY:
        from_secret: ecr_access_key
      ECR_SECRET_KEY:
        from_secret: ecr_secret_key
      GITHUB_TOKEN:
        from_secret: github_token
      S3_BUCKET:
        from_secret: s3_bucket
    depends_on:
      - run-tests
    volumes:
      - name: build-output
        path: /build-output
    when: 
      status: [success, failure]

  - name: upload-coverage-history
    image: say5/docker-aws-cli:0.0.3
    commands:
      - ls -lt /coverage-history
      - chmod -R 755 ./ci-scripts
      - FILE_NAME="$(ls -t coverage-history | head -1)"
      - echo $FILE_NAME
      - ./ci-scripts/aws-cp.sh "/coverage-history/$FILE_NAME" "s3://S3_BUCKET/$DRONE_REPO_NAME/coverage-history"
    environment:
      ARTIFACTS_SERVER:
        from_secret: artifacts_server
      ECR_ACCESS_KEY:
        from_secret: ecr_access_key
      ECR_SECRET_KEY:
        from_secret: ecr_secret_key
      S3_BUCKET:
        from_secret: s3_bucket
    depends_on:
      - run-tests
    volumes:
      - name: coverage-history
        path: /coverage-history

volumes:
- name: profile
  temp: {}
- name: build-output
  temp: {}
- name: coverage-history
  temp: {}